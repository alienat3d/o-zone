// 1.1 В функцию renderGoods мы принимаем атрибутом массив данных с товарами - goods.
const renderGoods = (goods) => {
  // 1.3 Получим общий контейнер с классом "goods"
  const goodsWrapper = document.querySelector('.goods');
  // 1.2 Перебираем этот массив методом forEach(), т.е. перебираем каждый товар. Также извлечь данные из него и отрендерить карточку товара, заполненную из свойств каждого объекта внутри массива goods.
  // 1.4 Итак мы перебираем весь массив goods и на каждой итерации\элементе внутри массива нам нужно будет помещать кусок вёрстки с карточкой товара. Причём в этой карточке товара мы будем размещать определённые свойства объекта, полученного из базы данных и его значение. Для реализации этого есть несколько способов, например innerHTML. Однако здесь используем insertAdjacentHTML.
  // 1.5.1 У этого метода есть два обязательных атрибута: 1) настройка в '', означающая каким образом будет размещаться вёрстка. Здесь мы выберем 'beforeend', чтобы каждая очередная карточка товара размещалась перед закрывающим тегом нашего общего контейнера или в конце списка всех товаров. 2) сама вёрстка, обычно передаётся через интерполяцию внутри ``. Туда мы вставим вёрстку карточки товара из index.html и заменим динамически изменяющиеся значения: названия, ссылки на картинки и т.д.
  // 1.5.2 Однако не забудем также и про то, что у нас некоторые товары со специальным значком "🔥Hot Sale🔥", но выводить мы его будем только в том случае, если свойство "sale = true". Создадим для этого условие через тернарный оператор. Это прекрасная замена условию "if else", буквально означает, что если свойство sale в значении true, то будет выводится вёрстка с значком, а если false, то ничего не будет выводится.
  // 1.6 Однако с методом insertAdjacentHTML() есть одна особенность, которую надо учесть. Дело в том, что он будет выводить в контейнер всё больше и больше вёрстки и в некоторых случаях она будет дублироваться, т.к. он не перезаписывает вёрстку, а только её добавляет, поэтому это нужно продумать и очищать вёрстку внутри контейнера перед её рендерингом.
  goodsWrapper.innerHTML = '';

  goods.forEach((goodsItem) => {
    goodsWrapper.insertAdjacentHTML(
      'beforeend',
      `
        <div class="col-12 col-md-6 col-lg-4 col-xl-3">
          <div class="card">
            ${goodsItem.sale ? '<div class="card-sale">🔥Hot Sale🔥</div>' : ''}
            <div class="card-img-wrapper">
              <span class="card-img-top" style="background-image: url('${
                goodsItem.img
              }')"></span>
            </div>
            <div class="card-body justify-content-between">
              <div class="card-price">${goodsItem.price} ₽</div>
              <h5 class="card-title">${goodsItem.title}</h5>
              <button class="btn btn-primary">В корзину</button>
            </div>
          </div>
        </div>
      `
    );
  });
};

export default renderGoods;
