{"version":3,"file":"./js/main.min.js","mappings":"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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./src/modules/render-cart.js","webpack:///./node_modules/simple-notify/dist/simple-notify.es.js","webpack:///./src/modules/get-data.js","webpack:///./src/modules/render-goods.js","webpack:///./src/modules/filters.js","webpack:///./src/modules/cart.js","webpack:///./src/modules/post-data.js","webpack:///./src/index.js","webpack:///./src/modules/load.js","webpack:///./src/modules/search.js","webpack:///./src/modules/helpers.js","webpack:///./src/modules/catalogue.js","webpack:///./src/modules/filter.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","const renderCart = (goods) => {\r\n  // 3.1 (начало в cart.js) Получаем контейнер модального окна корзины, где мы будем отрисовывать товары добавленные на покупку.\r\n  const cartWrapper = document.querySelector('.cart-wrapper');\r\n\r\n  cartWrapper.innerHTML = '';\r\n  // 3.2 Однако есть ещё нюанс, который заключается в том, что когда у нас нет в корзинке товаров, то должен показываться параграф с надписью \"Ваша корзина пока пуста\". Поэтому нам стоит также проверять длину нашего массива.\r\n  if (goods.length === 0) {\r\n    cartWrapper.insertAdjacentHTML(\r\n      'beforeend',\r\n      `\r\n      <div id=\"cart-empty\">\r\n        Ваша корзина пока пуста\r\n      </div>\r\n    `\r\n    );\r\n  } else {\r\n    goods.forEach((goodsItem) => {\r\n      cartWrapper.insertAdjacentHTML(\r\n        'beforeend',\r\n        `\r\n          <div class=\"card\" data-id=\"${goodsItem.id}\">\r\n            ${goodsItem.sale ? '<div class=\"card-sale\">🔥Hot Sale🔥</div>' : ''}\r\n            <div class=\"card-img-wrapper\">\r\n              <span class=\"card-img-top\" style=\"background-image: url('${\r\n                goodsItem.img\r\n              }')\"></span>\r\n            </div>\r\n            <div class=\"card-body justify-content-between\">\r\n              <div class=\"card-price\">${goodsItem.price} ₽</div>\r\n              <h5 class=\"card-title\">${goodsItem.title}</h5>\r\n              <button class=\"btn btn-primary\">Удалить</button>\r\n            </div>\r\n          </div>\r\n        `\r\n      );\r\n    });\r\n  }\r\n};\r\n\r\nexport default renderCart;\r\n","var fadeIn = function (self) {\r\n    self.wrapper.classList.add('notify--fade');\r\n    setTimeout(function () {\r\n        self.wrapper.classList.add('notify--fadeIn');\r\n    }, 100);\r\n};\r\nvar fadeOut = function (self) {\r\n    self.wrapper.classList.remove('notify--fadeIn');\r\n    setTimeout(function () {\r\n        self.wrapper.remove();\r\n    }, self.speed);\r\n};\r\nvar slideIn = function (self) {\r\n    self.wrapper.classList.add('notify--slide');\r\n    setTimeout(function () {\r\n        self.wrapper.classList.add('notify--slideIn');\r\n    }, 100);\r\n};\r\nvar slideOut = function (self) {\r\n    self.wrapper.classList.remove('notify--slideIn');\r\n    setTimeout(function () {\r\n        self.wrapper.remove();\r\n    }, self.speed);\r\n};\n\nvar stringToHTML = function (strHTML) {\r\n    var parser = new DOMParser(), content = 'text/html', DOM = parser.parseFromString(strHTML, content);\r\n    return DOM.body.childNodes[0];\r\n};\n\nvar Notify = /** @class */ (function () {\r\n    function Notify(args) {\r\n        var _this = this;\r\n        this.notifyOut = function (callback) {\r\n            callback(_this);\r\n        };\r\n        var status = args.status, _a = args.type, type = _a === void 0 ? 1 : _a, title = args.title, text = args.text, _b = args.showIcon, showIcon = _b === void 0 ? true : _b, _c = args.customIcon, customIcon = _c === void 0 ? '' : _c, _d = args.customClass, customClass = _d === void 0 ? '' : _d, _e = args.speed, speed = _e === void 0 ? 500 : _e, _f = args.effect, effect = _f === void 0 ? 'fade' : _f, _g = args.showCloseButton, showCloseButton = _g === void 0 ? true : _g, _h = args.autoclose, autoclose = _h === void 0 ? false : _h, _j = args.autotimeout, autotimeout = _j === void 0 ? 3000 : _j, _k = args.gap, gap = _k === void 0 ? 20 : _k, _l = args.distance, distance = _l === void 0 ? 20 : _l, _m = args.position, position = _m === void 0 ? 'right top' : _m, _o = args.customWrapper, customWrapper = _o === void 0 ? '' : _o;\r\n        this.customWrapper = customWrapper;\r\n        this.status = status;\r\n        this.title = title;\r\n        this.text = text;\r\n        this.showIcon = showIcon;\r\n        this.customIcon = customIcon;\r\n        this.customClass = customClass;\r\n        this.speed = speed;\r\n        this.effect = effect;\r\n        this.showCloseButton = showCloseButton;\r\n        this.autoclose = autoclose;\r\n        this.autotimeout = autotimeout;\r\n        this.gap = gap;\r\n        this.distance = distance;\r\n        this.type = type;\r\n        this.position = position;\r\n        if (!this.checkRequirements()) {\r\n            console.error(\"You must specify 'title' or 'text' at least.\");\r\n            return;\r\n        }\r\n        // set outer container for all Notify's\r\n        this.setContainer();\r\n        // set wrapper for each Notify\r\n        this.setWrapper();\r\n        this.setPosition();\r\n        // set icon in the left\r\n        if (this.showIcon)\r\n            this.setIcon();\r\n        // set close button\r\n        if (this.showCloseButton)\r\n            this.setCloseButton();\r\n        // set title, text\r\n        this.setContent();\r\n        // add the Notify to our container\r\n        this.container.prepend(this.wrapper);\r\n        // init effect\r\n        this.setEffect();\r\n        this.notifyIn(this.selectedNotifyInEffect);\r\n        // init autoclose\r\n        if (this.autoclose)\r\n            this.autoClose();\r\n        // check whether Notify is visible\r\n        this.setObserver();\r\n    }\r\n    Notify.prototype.checkRequirements = function () {\r\n        return !!(this.title || this.text);\r\n    };\r\n    Notify.prototype.setContainer = function () {\r\n        var container = document.querySelector('.notifications-container');\r\n        if (container) {\r\n            this.container = container;\r\n        }\r\n        else {\r\n            this.container = document.createElement('div');\r\n            this.container.classList.add('notifications-container');\r\n            document.body.appendChild(this.container);\r\n        }\r\n        this.container.style.setProperty('--distance', this.distance + \"px\");\r\n    };\r\n    Notify.prototype.setPosition = function () {\r\n        var prefix = 'notify-is-';\r\n        this.position === 'center' ? this.container.classList.add(prefix + \"center\") : this.container.classList.remove(prefix + \"center\");\r\n        this.position.includes('left') ? this.container.classList.add(prefix + \"left\") : this.container.classList.remove(prefix + \"left\");\r\n        this.position.includes('right') ? this.container.classList.add(prefix + \"right\") : this.container.classList.remove(prefix + \"right\");\r\n        this.position.includes('x-center') ? this.container.classList.add(prefix + \"x-center\") : this.container.classList.remove(prefix + \"x-center\");\r\n        this.position.includes('top') ? this.container.classList.add(prefix + \"top\") : this.container.classList.remove(prefix + \"top\");\r\n        this.position.includes('bottom') ? this.container.classList.add(prefix + \"bottom\") : this.container.classList.remove(prefix + \"bottom\");\r\n        this.position.includes('y-center') ? this.container.classList.add(prefix + \"y-center\") : this.container.classList.remove(prefix + \"y-center\");\r\n    };\r\n    Notify.prototype.setCloseButton = function () {\r\n        var _this = this;\r\n        var icon_close = '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m8.94 8 4.2-4.193a.67.67 0 0 0-.947-.947L8 7.06l-4.193-4.2a.67.67 0 1 0-.947.947L7.06 8l-4.2 4.193a.667.667 0 0 0 .217 1.093.666.666 0 0 0 .73-.146L8 8.94l4.193 4.2a.665.665 0 0 0 .947 0 .665.665 0 0 0 0-.947L8.94 8Z\" fill=\"currentColor\"/></svg>';\r\n        var closeWrapper = document.createElement('div');\r\n        closeWrapper.classList.add('notify__close');\r\n        closeWrapper.innerHTML = icon_close;\r\n        this.wrapper.appendChild(closeWrapper);\r\n        closeWrapper.addEventListener('click', function () {\r\n            _this.close();\r\n        });\r\n    };\r\n    Notify.prototype.setWrapper = function () {\r\n        if (this.customWrapper) {\r\n            this.wrapper = stringToHTML(this.customWrapper);\r\n        }\r\n        else {\r\n            this.wrapper = document.createElement('div');\r\n        }\r\n        this.wrapper.style.setProperty('--gap', this.gap + \"px\");\r\n        this.wrapper.style.transitionDuration = this.speed + \"ms\";\r\n        // set classes\r\n        this.wrapper.classList.add('notify');\r\n        this.wrapper.classList.add(\"notify--type-\" + this.type);\r\n        this.wrapper.classList.add(\"notify--\" + this.status);\r\n        if (this.autoclose)\r\n            this.wrapper.style.setProperty('--timeout', \"\" + (this.autotimeout + this.speed));\r\n        if (this.autoclose)\r\n            this.wrapper.classList.add(\"notify-autoclose\");\r\n        if (this.customClass)\r\n            this.wrapper.classList.add(this.customClass);\r\n    };\r\n    Notify.prototype.setContent = function () {\r\n        var contentWrapper = document.createElement('div');\r\n        contentWrapper.classList.add('notify-content');\r\n        var titleElement, textElement;\r\n        if (this.title) {\r\n            titleElement = document.createElement('div');\r\n            titleElement.classList.add('notify__title');\r\n            titleElement.textContent = this.title;\r\n            if (!this.showCloseButton)\r\n                titleElement.style.paddingRight = '0';\r\n        }\r\n        if (this.text) {\r\n            textElement = document.createElement('div');\r\n            textElement.classList.add('notify__text');\r\n            textElement.innerHTML = this.text.trim();\r\n            if (!this.title)\r\n                textElement.style.marginTop = '0';\r\n        }\r\n        this.wrapper.appendChild(contentWrapper);\r\n        if (this.title)\r\n            contentWrapper.appendChild(titleElement);\r\n        if (this.text)\r\n            contentWrapper.appendChild(textElement);\r\n    };\r\n    Notify.prototype.setIcon = function () {\r\n        var icon_success = '<svg height=\"32\" width=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"currentColor\" d=\"m19.627 11.72-5.72 5.733-2.2-2.2a1.335 1.335 0 0 0-2.255.381 1.334 1.334 0 0 0 .375 1.5l3.133 3.146a1.333 1.333 0 0 0 1.88 0l6.667-6.667a1.334 1.334 0 1 0-1.88-1.893ZM16 2.667a13.333 13.333 0 1 0 0 26.666 13.333 13.333 0 0 0 0-26.666Zm0 24a10.666 10.666 0 1 1 0-21.333 10.666 10.666 0 0 1 0 21.333Z\"/></svg>';\r\n        var icon_error = '<svg height=\"32\" width=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"currentColor\" d=\"M16 2.667a13.333 13.333 0 1 0 0 26.666 13.333 13.333 0 0 0 0-26.666Zm0 24A10.667 10.667 0 0 1 5.333 16a10.56 10.56 0 0 1 2.254-6.533l14.946 14.946A10.56 10.56 0 0 1 16 26.667Zm8.413-4.134L9.467 7.587A10.56 10.56 0 0 1 16 5.333 10.667 10.667 0 0 1 26.667 16a10.56 10.56 0 0 1-2.254 6.533Z\"/></svg>';\r\n        var icon_warning = '<svg height=\"32\" width=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"currentColor\" d=\"M13.666 15A1.333 1.333 0 0 0 15 13.667V8.334a1.333 1.333 0 0 0-2.665 0v5.333A1.333 1.333 0 0 0 13.666 15Zm-.507 5.227c.325.134.69.134 1.014 0 .164-.064.314-.159.44-.28a1.56 1.56 0 0 0 .28-.44c.075-.158.111-.332.106-.507a1.333 1.333 0 0 0-.386-.946 1.53 1.53 0 0 0-.44-.28A1.333 1.333 0 0 0 12.334 19a1.4 1.4 0 0 0 .386.947c.127.121.277.216.44.28ZM13.666 27a13.333 13.333 0 1 0 0-26.667 13.333 13.333 0 0 0 0 26.667Zm0-24a10.667 10.667 0 1 1 0 21.333 10.667 10.667 0 0 1 0-21.333Z\"/></svg>';\r\n        var icon_info = '<svg height=\"32\" width=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"currentColor\" d=\"M16 14.667A1.333 1.333 0 0 0 14.667 16v5.333a1.333 1.333 0 1 0 2.666 0V16A1.333 1.333 0 0 0 16 14.667Zm.507-5.227a1.333 1.333 0 0 0-1.014 0 1.334 1.334 0 0 0-.44.28c-.117.13-.212.278-.28.44a1.12 1.12 0 0 0-.106.507 1.333 1.333 0 0 0 .386.946c.13.118.279.213.44.28a1.333 1.333 0 0 0 1.84-1.226 1.4 1.4 0 0 0-.386-.947 1.334 1.334 0 0 0-.44-.28ZM16 2.667a13.333 13.333 0 1 0 0 26.666 13.333 13.333 0 0 0 0-26.666Zm0 24a10.666 10.666 0 1 1 0-21.333 10.666 10.666 0 0 1 0 21.333Z\"/></svg>';\r\n        var computedIcon = function (status) {\r\n            switch (status) {\r\n                case 'success':\r\n                    return icon_success;\r\n                case 'warning':\r\n                    return icon_warning;\r\n                case 'error':\r\n                    return icon_error;\r\n                case 'info':\r\n                    return icon_info;\r\n            }\r\n        };\r\n        var iconWrapper = document.createElement('div');\r\n        iconWrapper.classList.add('notify__icon');\r\n        iconWrapper.innerHTML = this.customIcon || computedIcon(this.status);\r\n        if (this.status || this.customIcon)\r\n            this.wrapper.appendChild(iconWrapper);\r\n    };\r\n    Notify.prototype.setObserver = function () {\r\n        var _this = this;\r\n        var observer = new IntersectionObserver(function (entries) {\r\n            if (!(entries[0].intersectionRatio <= 0)) {\r\n                return;\r\n            }\r\n            else {\r\n                _this.close();\r\n            }\r\n        }, {\r\n            threshold: 0\r\n        });\r\n        setTimeout(function () {\r\n            observer.observe(_this.wrapper);\r\n        }, this.speed);\r\n    };\r\n    Notify.prototype.notifyIn = function (callback) {\r\n        callback(this);\r\n    };\r\n    Notify.prototype.autoClose = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            _this.close();\r\n        }, this.autotimeout + this.speed);\r\n    };\r\n    Notify.prototype.close = function () {\r\n        this.notifyOut(this.selectedNotifyOutEffect);\r\n    };\r\n    Notify.prototype.setEffect = function () {\r\n        switch (this.effect) {\r\n            case 'fade':\r\n                this.selectedNotifyInEffect = fadeIn;\r\n                this.selectedNotifyOutEffect = fadeOut;\r\n                break;\r\n            case 'slide':\r\n                this.selectedNotifyInEffect = slideIn;\r\n                this.selectedNotifyOutEffect = slideOut;\r\n                break;\r\n            default:\r\n                this.selectedNotifyInEffect = fadeIn;\r\n                this.selectedNotifyOutEffect = fadeOut;\r\n        }\r\n    };\r\n    return Notify;\r\n}());\n\nexport { Notify as default };\n","import Notify from 'simple-notify';\r\n// ? [Также см. 1.5.2 в search.js]\r\nconst getData = (string) => {\r\n  // 1.1 Метод fetch() создан специально для работы с серверными запросами, он принимает один обязательный аргумент - это строку URL, по которой находятся данные, которые нам необходимо получить.\r\n  // 1.2 Когда fetch() запускается, то он делает обращение по URL, которое мы предоставляем в качестве аргумента. На другой стороне сервер принимает наш запрос и отдаёт данные исходя из запроса. В данном примере с сервиса jsonplaceholder.typicode.com из массива \"todos\" мы получаем элемент с индексом \"1\".\r\n  // 1.3 Далее сервер формирует некий ответ на наш запрос и присылает его нам. Но этот ответ сервер пришлёт не сразу, а через какое-то время. И это количество времени нам точно не известно, т.к. зависит от многих факторов.\r\n  // 1.4 И чтобы мы могли работать с информацией в тот момент, когда она точно нами получена, для метода fetch() существует специальный метод then(). Данный метод получает аргументом callback-функцию, а она уже принимает параметр \"response\", т.е. ответ от сервера. Теперь then() запустить свою callback-функцию только тогда, когда получит весь ответ от сервера, а аргументом в эту функцию он отправит весь ответ от сервера \"(response)\".\r\n  // ? Callback-функция - это обычная функция, которую мы передаём аргументом в другую функцию.\r\n  // 1.5 Среди разных свойств полученного объекта есть и \"body: ReadableStream\", это как раз те данные, что мы и ждали, но только не в том виде, что будет нам полезным. А чтобы как-то с ним работать нам сперва потребуется расшифровать его специальным методом JSON(), который переведёт ответ в JSON-структуру и вернуть с return.\r\n  // 1.6 Далее используем ещё один метод then(), который также получит callback-функцию в качестве аргумента, но этот then() получит уже другие, изменённые данные, те, что вернёт response.json() в предыдущем then() и назовём мы этот аргумент \"data\"\r\n  return fetch(\r\n    `https://o-zone-fake-default-rtdb.europe-west1.firebasedatabase.app/goods.json?${string ? `search=${string}` : ''}`\r\n  )\r\n    .then((response) => {\r\n      // * Теперь попробуем воспроизвести ошибку и обработать её. Для этого допустим опечатку в URL выше. Как обрабатываются такие ошибки? Просто с помощью условия if и \"response.ok\".\r\n      if (response.ok) {\r\n        return response.json();\r\n      } else {\r\n        // * Выкидываем ошибку с \"throw new Error\", а потом обработаем её перехватчиком ошибок \".catch()\"\r\n        throw new Error(\r\n          \"We've got an error while getting data from Firebase!\"\r\n        );\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      // * Добавим всплывающее окно из библиотеки Notify\r\n      new Notify({\r\n        status: 'error',\r\n        title: 'Oops!',\r\n        text: error.message,\r\n        effect: 'fade',\r\n        type: 3,\r\n      });\r\n    });\r\n\r\n  /* .then((data) => {\r\n      console.log(data); // 1.7 И вот мы видим уже наш объект в том виде, который нам был нужен. И теперь мы её можем отправить например на рендер или в сохранение на localStorage.\r\n    }); */\r\n  // ? Кстати с JSONplaceholder, помимо todos мы также можем получать ещё следующие данные:\r\n  /*   \r\n  /posts/1/comments\r\n  /albums/1/photos\r\n  /users/1/albums\r\n  /users/1/todos\r\n  /users/1/posts \r\n  */\r\n};\r\n\r\nexport default getData;\r\n\r\n// Здесь мы разобрали метод get, но на самом деле методов гораздо больше, например можно разобрать также метод post, для этого перейдём в post-data.js [...]\r\n\r\n// 3.1 Итак, мы создали уже два отдельных модуля getData & postData, которые можем вызывать из любого другого модуля.\r\n// 3.2 Ещё раз - При вызове getData функция вернёт результат выполнения метода fetch(), который является асинхронной операцией, а это означает, что результат его выполнения займёт определённое время. И сколько времени займёт мы точно не можем узнать. Для этого мы используем метод then(), который будет отработан сразу, как только данные с сервера полностью поступят. Тогда эти данные поступят через аргумент в callback-функцию, которая переведёт в удобный нам формат и вернёт эти данные наружу. Далее эти данные также будут возвращены из функции getData, вместо вызова этой функции getData() туда, где нам это может понадобиться и можно будет воспользоваться ещё одним then(), чтобы вывести в консоль или отправить в какую-то другую функцию данные от сервера.\r\n// * getData().then((data) => {  console.log(data); });\r\n","const renderGoods = (goods) => {\r\n  const goodsWrapper = document.querySelector('.goods');\r\n  // *2.0 == Реализуем функцию корзины ==\r\n  // 2.1 Для этого нам понадобится localStorage, куда мы можем заносить локально (в кэш браузера юзера) какие-то данные. Чтобы записывать данные в localStorage у нас есть метод setItem(), который принимает два аргумента: 1) название ключа, которым мы назовём будущий контейнер для записываемых данных; 2) передадим массив данных, но не просто массив, а он нам нужен в виде строки и для этого используем метод JSON.Stringify(). Теперь у нас запишутся в localStorage все товары, отображаемые на странице.\r\n  localStorage.setItem('goods', JSON.stringify(goods));\r\n\r\n  goodsWrapper.innerHTML = '';\r\n  // 2.2 Итак у каждого товара есть свой id и именно по нему мы будем определять на какой именно товар мы кликнули. Ну а для этого на каждую карточку товара нам необходимо поместить определённый дата-атрибут, по которому мы будем определять на какой именно товар мы кликнули. Укажем его в теге с классом \"card\". Теперь у каждой из карточек есть уникальный атрибут data-id, к которому мы можем привязать логику. Мы можем забрать конкретный объект из localStorage и положить его в другом объекте в localStorage под названием \"cart\".\r\n  // 2.3.1 Обработаем клик по кнопке \"В корзину\". \r\n  // todo 2.3.2 Для это теоретически можно было бы повесить обработчик события по клику на каждую карточку, но делать это не очень хорошо (!!!), представляете, если бы у нас было 1000 карточек товара и на каждой бы висел обработчик события. Это совершенно расточительный подход к использованию ресурсов устройства пользователя!\r\n  // 2.3.3 Но благо у нас есть лучше способ - «делегирование». Повесим обработчик события на весь контейнер, где находятся все карточки товара с классом \".goods\", а потом проверим по какой именно карточки происходит клик. Таким образом мы не зависим больше от количества карточек на страницы и обработчик у нас будет всего лишь один.\r\n  // 2.3.4 Перейдём в cart.js и получим контейнер \".goods\"...\r\n  goods.forEach(goodsItem => {\r\n    goodsWrapper.insertAdjacentHTML(\r\n      'beforeend',\r\n      `\r\n        <div class=\"col-12 col-md-6 col-lg-4 col-xl-3\">\r\n          <div class=\"card\" data-id=\"${goodsItem.id}\">\r\n            ${goodsItem.sale ? '<div class=\"card-sale\">🔥Hot Sale🔥</div>' : ''}\r\n            <div class=\"card-img-wrapper\">\r\n              <span class=\"card-img-top\" style=\"background-image: url('${\r\n                goodsItem.img\r\n              }')\"></span>\r\n            </div>\r\n            <div class=\"card-body justify-content-between\">\r\n              <div class=\"card-price\">${goodsItem.price} ₽</div>\r\n              <h5 class=\"card-title\">${goodsItem.title}</h5>\r\n              <button class=\"btn btn-primary\">В корзину</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `\r\n    );\r\n  });\r\n};\r\n\r\nexport default renderGoods;\r\n","// ? 1.0 Этот файл не спроста называется filters во множ. числе, фильтров будет несколько. Поэтому мы экспортируем каждую функцию как обычную функцию. Также и импортировать мы будем чуточку иначе. [см. search.js] Дело в том, что когда мы экспортируем по дефолту, то экспортировать из файла мы можем лишь одну функцию.\r\n// 1.1 Будет принимать весь массив goods и value, строку, которую мы будем вводить в строку поиска.\r\n// 1.2.1 Итак наша задача отфильтровать весь массив данных по данному value, т.е. по значению строки введённой пользователем в поле ввода поиска, оставив только те элементы, которые нам нужно отобразить на странице. Для этой задачи воспользуемся методом filter(), который перебирает массив, тем самым возвращая новый массив, в который попадут элементы, которые соответствуют нашим требованиям.\r\n// 1.2.2 Метод filter() будет иметь callback-функцию с параметром goodsItem, которые означает каждый итерируемый элемент. В новый массив filter() будет помещать те элементы, callback-функция которых будет возвращать true и игнорироваться те, что будут возвращать false.\r\n// 1.2.3 Но так как нам нужно искать совпадение с вводом в поле поиска, то нам пригодится метод includes(), который будет сравнивать значение value со значением в свойстве title каждого элемента.\r\nexport const searchFilter = (goods, value) => {\r\n  return goods.filter((goodsItem) => {\r\n    // return goodsItem.sale === true; - если мы например пропишем так, то у нас останутся лишь те элементы массива, у который свойство sale строго равняется true, т.е. лишь товары по акции.\r\n    return goodsItem.title.toLowerCase().includes(value.toLowerCase()); // добавим также метод toLowerCase() к названию и к введённому значению, чтобы автоматически переводить введённое значение в нижний регистр, чтобы артикли находились вне зависимости от того, в каком регистре пользователь их искал.\r\n  });\r\n};\r\n// 2.1 Здесь мы возвращаем тот массив, элементы которого имеют определённое значение категорий. У каждого элемента есть свойство category и оно равно одной из категорий, по которой мы можем кликнуть в модальном окне «Каталог» [см. catalogue.js], а текст с названием категории мы передаём в value.\r\nexport const categoryFilter = (goods, value) => {\r\n  return goods.filter((goodsItem) => {\r\n    return goodsItem.category === value;\r\n  });\r\n};\r\n// 3.1 Здесь нам нужно возвращать все элементы у которых значение свойства price >=, чем minValue. Но так как minValue у нас приходит из input, а значит является строкой, то нам сперва нужно конвертировать его в числовой тип данных при помощи parseInt(). Тоже самое, только <= будет у нас с maxValue.\r\n// 3.2 Но так как пробелы выдают нам false, то лучше нам это всё завернуть в переменные isMin & isMax и возвращать уже их.\r\n// 3.5.2 Добавляем и сюда параметр статуса чекбокса checkValue. Также ищем к какому свойству goodsItem’а можно привязать наше условие по чекбоксу. Находим «sale», его-то мы и укажем в условии, но только при наличии акции, т.е. checkValue.\r\n// 4.1 Теперь нам нужно также объединить два фильтра, поиска и цен, чтобы они согласовывались между собой. Для этого добавим searchStr\r\nexport const funcFilter = (\r\n  goods,\r\n  minValue,\r\n  maxValue,\r\n  checkValue,\r\n  searchValue\r\n) => {\r\n  return goods.filter((goodsItem) => {\r\n    //? Кстати ниже записанную функцию можно было упростить.\r\n    const isMin = minValue.trim()\r\n      ? goodsItem.price >= parseInt(minValue.trim())\r\n      : true;\r\n    const isMax = maxValue.trim()\r\n      ? goodsItem.price <= parseInt(maxValue.trim())\r\n      : true;\r\n    const isSale = checkValue ? goodsItem.sale : true;\r\n\r\n    return (\r\n      isMin &&\r\n      isMax &&\r\n      isSale &&\r\n      goodsItem.title.toLowerCase().includes(searchValue.toLowerCase())\r\n    );\r\n  });\r\n};\r\n\r\n// ? === Альтернативное решение priceFilter() функции из урока №4 ===\r\nexport const priceFilter = (goods, min, max) => {\r\n  return goods.filter((goodsItem) => {\r\n    if (min === '' && max === '') {\r\n      return goodsItem;\r\n    } else if (min !== '' && max !== '') {\r\n      return goodsItem.price > +min && goodsItem.price < +max;\r\n    } else if (min !== '' && max === '') {\r\n      return goodsItem.price > +min;\r\n    } else if (min === '' && max !== '') {\r\n      return goodsItem.price < +max;\r\n    }\r\n  });\r\n};\r\n\r\nexport const hotSaleFilter = (goods, value) => {\r\n  return goods.filter((goodsItem) => {\r\n    if (value) {\r\n      return goodsItem.sale === true;\r\n    } else {\r\n      return goodsItem;\r\n    }\r\n  });\r\n};\r\n","import renderCart from './render-cart.js';\r\nimport postData from './post-data.js';\r\n\r\n// import getData from './get-data.js'; // ? 0.1 - модули не обязательно всегда импортировать и запускать в точке входа.\r\n\r\nconst cart = () => {\r\n  // 2.3.4 (начало в render-goods.js)\r\n  // * 4.1 Займёмся вычислением общей суммы всех товаров. Для этого сперва получим элемент, в который мы станем отрисовывать эту сумму и запишем его в переменную cartTotalSum.\r\n  // * 5.1 Нам также нужно мочь удалять товары из нашей корзины. Для этого получим контейнер, в котором они находятся в корзине товаров.\r\n  // * 6.1 Осталось реализовать отправку всего массива \"cart\". Для этого получим кнопку внутри модального окна корзины \"Оформить заказ\".\r\n  const cartButton = document.querySelector('#cart'),\r\n    cartModal = document.querySelector('.cart'),\r\n    cartCloseButton = cartModal.querySelector('.cart-close'),\r\n    cartTotalSum = cartModal.querySelector('.cart-total > span'),\r\n    cartWrapper = cartModal.querySelector('.cart-wrapper'),\r\n    cartSendButton = cartModal.querySelector('.cart-confirm'),\r\n    goodsWrapper = document.querySelector('.goods');\r\n\r\n  // 3.2 При клике на кнопку корзины у нас отработает функция openCart() и нам необходимо получить в этой функции всю нашу корзину с добавленными товарами. Для этого получим нашу переменную cart с данными из localStorage в ней, а затем запустим функцию renderCart() для отрисовки этих товаров в корзине и передадим туда данные из cart.\r\n\r\n  const openCart = () => {\r\n    const cart = localStorage.getItem('cart')\r\n      ? JSON.parse(localStorage.getItem('cart'))\r\n      : [];\r\n\r\n    cartModal.style.display = 'flex';\r\n\r\n    renderCart(cart);\r\n    // 4.2 При открытии корзины также и текстовое содержимое общей суммы цены товаров му рассчитаем и видоизменим. Для этого обратимся к массиву cart и методом reduce() переберём массив. Он примет callback-функцию, а вторым аргументом начальное значение (\"0\") контейнера, в котором мы будем рассчитывать конечную сумму всех товаров, полученную при переборе элементов.\r\n    // 4.3 Он также примет такие аргументы, как sum - некий аккумулятор, который будет накапливать сумму цен товаров, а также goodItem - каждый итерируемый элемент.\r\n    cartTotalSum.textContent = cart.reduce((sum, goodItem) => {\r\n      return sum + goodItem.price; // так легко считается итоговая сумма в массиве\r\n    }, 0);\r\n  };\r\n\r\n  const closeCart = () => {\r\n    cartModal.style.display = '';\r\n  };\r\n\r\n  cartButton.addEventListener('click', openCart);\r\n  cartCloseButton.addEventListener('click', closeCart);\r\n  // 2.4.1 Теперь нам необходимо отсечь все элементы кроме самой кнопки «В корзину». Для этого мы используем event.target, для обнаружения кнопки. Из вёрстки мы увидели у неё класс \".btn-primary\", вот по нему мы и будем проверять нужную нам кнопку.\r\n  // 2.4.2 По клику на кнопку нам нужно будет найти родительский тег с классом \".card\" для того, чтобы с него считать наш дата-атрибут с id товара.\r\n  // 2.4.3 Далее с помощью метода dataset.id мы считаем значение нашего дата-атрибута.\r\n  // 2.4.4 Осталось достать из localStorage нужный объект с этим id и записать его в массив. А далее сохранить этот массив в localStorage. Получим весь массив из localStorage методом getItem() с ключом \"goods\". Так мы получим данные в виде строчных данных. Но для того, чтобы нам получить массив мы можем конвертировать их в массив методом JSON.parse()\r\n  // 2.4.5 Теперь из этого массива нам нужно достать объект с нужным нам id и записать его в новый массив нашей корзинки. Для этого создадим ещё одну переменную \"cart\" в которой пока будет пустой массив.\r\n  // 2.4.6 Но если у нас теперь уже будет \"cart\" в localStorage, то нам также нужно проверять есть ли такой ключ в localStorage с помощью тернарного оператора, который означает следующее: Если у нас в localStorage есть массив с ключом \"cart\", тогда мы занесём в значение ключа \"cart\" массив с ключом \"cart\", иначе вернём пустой массив. Тернарный оператор состоит из \"условие\" ? \"первый результат, если вернётся true\" : \"второй результат, если вернётся false\".\r\n  // 2.4.7 Теперь нашей задачей будет достать из массива \"goods\" необходимый нам объект (который добавляем в корзинку), записать его в массив \"cart\" и сохранить массив \"cart\" в localStorage с ключом \"cart\". Для этого создадим переменную goodItem, которой присвоим массив goods с методом перебора массива find(), который будет искать совпадения с нашим массивом и возвращать первый объект из массива, который подойдёт нам под условие. У него также будет callback-функция, которая в свою очередь получает каждый итерируемый item. А возвращать мы будем значение id этого item’а равного полученному id из дата-атрибута в переменной \"id\". Правда он в виде строки, поэтому напишем унарный плюс перед ним, чтобы превратить в числовой вид данных.\r\n  // 2.4.8 Добавим полученный goodItem в массив cart и перезапишем массив cart в localStorage. Для этого мы обратимся к cart методом push() и передадим ему goodItem.\r\n  // 2.4.9 Далее всё как мы делали с массивом goods - localStorage.setItem('cart', JSON.stringify(cart))\r\n  // 3.1 Теперь, когда у нас добавляются товары в специальный контейнер \"cart\" в localStorage мы можем отрисовать их в модальном окне корзины по клику на кнопку корзины. (см. render-cart.js)\r\n  goodsWrapper.addEventListener('click', (evt) => {\r\n    if (evt.target.classList.contains('btn-primary')) {\r\n      const card = evt.target.closest('.card');\r\n      const id = card.dataset.id;\r\n      const goods = JSON.parse(localStorage.getItem('goods'));\r\n      const cart = localStorage.getItem('cart')\r\n        ? JSON.parse(localStorage.getItem('cart'))\r\n        : [];\r\n      const goodItem = goods.find((item) => {\r\n        return item.id === +id;\r\n      });\r\n\r\n      cart.push(goodItem);\r\n\r\n      localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n  });\r\n  // 5.2 Также и здесь мы воспользуемся делегированием и повесим на контейнер с товарами в корзине cartWrapper обработчик события по клику и сделаем такое же условие, что только при условии нахождения у элемента класса \"btn-primary\" мы сперва будем находить весь массив cart.\r\n  cartWrapper.addEventListener('click', (evt) => {\r\n    if (evt.target.classList.contains('btn-primary')) {\r\n      const cart = localStorage.getItem('cart')\r\n        ? JSON.parse(localStorage.getItem('cart'))\r\n        : [];\r\n      // 5.3 Далее мы получаем тот элемент, который мы кликнули.\r\n      const card = evt.target.closest('.card');\r\n      const id = card.dataset.id;\r\n      // 5.7 Итак, чтобы удалить какой-то элемент из массивы \"cart\" нам нужно узнать индекс этого элемента внутри массива. Для этого создадим переменную index. В неё поместим значение, полученное из cart с помощью метода findIndex(), который примет функцию-callback, которая вернёт индекс найденного элемента. Также мы сравним item.id cо значением переменной id.\r\n      const index = cart.findIndex((item) => {\r\n        return item.id === +id;\r\n      });\r\n      // 5.8 Теперь мы применим к массиву cart метод splice(), который примет два аргумента: 1) индекс удаляемого элемента, 2) количество элементов.\r\n      cart.splice(index, 1);\r\n      // 5.4 Ну и в итоге удалить из массива \"cart\" элемент с тем id, по которому мы кликнули и снова записать в localStorage обновлённый массив данных.\r\n      localStorage.setItem('cart', JSON.stringify(cart));\r\n      // 5.5 И снова вызовем функцию отрисовки товара renderCart()\r\n      renderCart(cart);\r\n      // 5.6 А также подсчёт итоговой стоимости\r\n      cartTotalSum.textContent = cart.reduce((sum, goodItem) => {\r\n        return sum + goodItem.price;\r\n      }, 0);\r\n    }\r\n  });\r\n  // 6.2 Повесим на кнопку отправки товаров из корзины также обработчик события по клику\r\n  cartSendButton.addEventListener('click', () => {\r\n    // 6.3 После клика по кнопке нам нужно получить массив \"cart\" или пустой массив.\r\n    const cart = localStorage.getItem('cart')\r\n      ? JSON.parse(localStorage.getItem('cart'))\r\n      : [];\r\n    // 6.4 Вызовем функцию передачи данных на сервер postData() и передадим в неё массив cart.\r\n    // 6.5 (см. post-data.js)\r\n    // * 7.1 Теперь после отправки нашей корзины на сервер нам нужно её очистить и перерисовать. Здесь подойдёт метод then(), который вызовется сразу, после того как произойдёт успешная отправка данных.\r\n    // 7.2 Сначала применим на localStorage метод removeItem() с ключом \"cart\", чтобы очистить память от этого массива.\r\n    postData(cart).then(() => {\r\n      localStorage.removeItem('cart');\r\n      // 7.3 Перерисуем передав пустой массив...\r\n      renderCart([]);\r\n      // 7.4 ...и пересчитаем общую цену, точнее подставим 0, ведь корзина теперь пуста.\r\n      cartTotalSum.textContent = 0;\r\n    });\r\n  });\r\n};\r\n\r\nexport default cart;\r\n","const postData = (cart) => {\r\n  // 2.1 Для демонстрации метода POST изменим наш fetch на новый. (из: https://jsonplaceholder.typicode.com/guide/ \"Creating a resource\")\r\n  // 2.2 Теперь наш метод fetch() принимает один обязательный аргумент - URL с запросом на сервер, но также принимает и второй аргумент в виде объекта с настройками данного запроса. Здесь свойствами мы определяем, что именно мы будем отправлять. \"method: 'POST'\" - значит мы будем отправлять информацию, некое тело запроса, свойство \"body\" и \"headers\", которые указываются специально для сервера JSONplaceholder, т.к. он ожидает именно такое хедеры. И если их не будет, возможно возникнет ошибка.\r\n  // 2.3 В \"body\" мы помещаем метод JSON.stringify(), который преобразует объект в строку и потом этот объект в виде строки будет отправлен по URL-запросу в первом аргументе метода fetch().\r\n  // 6.5 (начало в cart.js) Теперь вместо объекта с Ведьмаком 3 передадим в callback-функцию и в body \"cart\". Во вкладке Dev Tools \"Network\" можно убедиться, что всё работает как надо.\r\n  // return fetch('https://o-zone-fake-default-rtdb.europe-west1.firebasedatabase.app/goods.json', {\r\n  return fetch('https://jsonplaceholder.typicode.com/posts', {\r\n    method: 'POST',\r\n    body: JSON.stringify(cart),\r\n    headers: {\r\n      'Content-type': 'application/json; charset=UTF-8',\r\n    },\r\n  }).then((response) => response.json()); // 2.4 Однако ответ нам точно также обработать.\r\n};\r\n\r\nexport default postData;\r\n\r\n// 3.1 Итак, мы создали уже два отдельных модуля getData & postData, которые можем вызывать из любого другого модуля.\r\n// ? Кроме get & post запросов, есть ещё put, patch & delete. Delete - удаляет, put - полностью заменяет запись, а patch - видоизменяет.\r\n","import cart from './modules/cart.js';\r\nimport load from './modules/load.js';\r\nimport search from './modules/search.js';\r\nimport catalogue from './modules/catalogue.js';\r\nimport filter from './modules/filter.js';\r\n\r\nimport './scss/style.scss'\r\n\r\ncart();\r\nload();\r\nsearch();\r\ncatalogue();\r\nfilter();","import getData from './get-data.js';\r\nimport renderGoods from './render-goods.js';\r\n\r\nconst load = () => {\r\n  const cartButton = document.querySelector('#cart');\r\n\r\n  getData().then((data) => {\r\n    renderGoods(data)\r\n  });\r\n};\r\n\r\nexport default load;\r\n","import getData from './get-data.js';\r\nimport renderGoods from './render-goods.js';\r\nimport { funcFilter } from './filters.js';\r\nimport { debounce } from './helpers.js';\r\n\r\nconst search = () => {\r\n  const searchInput = document.querySelector('.search-wrapper_input');\r\n  // 2.0 Программируем фильтр цен\r\n  // 2.1 Сначала получим из вёрстки строки ввода минимальной цены фильтра и максимальной\r\n  const minInput = document.querySelector('#min');\r\n  const maxInput = document.querySelector('#max');\r\n  // 3.1 Добавим также функцию сортировки товаров по акции, для этого получим инпут чекбокса\r\n  const checkbox = document.querySelector('#discount-checkbox');\r\n  // 3.3 Также получим элемент чекбокса, который связан с инпутом (кастомный чекбокс), чтобы на него вешать класс \"checked\" для появления галочки, при выборе.\r\n  const checkMark = document.querySelector('.filter-check_checkmark');\r\n\r\n  // 2.3 Также создадим похожую debounce функцию, как и с общим поиском, но уже по фильтрации цен. Укажем аргументами минимальную и максимальную цены.\r\n  // 2.4 Однако searchFilter нужно будет немного переделать. Перейдём для этого в filters.js.\r\n  // 2.5 В саму функцию фильтра цен будет передаваться дата (весь товар), минимальная и максимальная цена.\r\n  // 3.4.1 Также добавим и атрибут для чекбокса «Акции» check с дефолтным значение «false».\r\n  const debounceFunc = debounce(\r\n    (min = '', max = '', checkValue = false, searchValue = '') => {\r\n      getData().then((data) => {\r\n        renderGoods(funcFilter(data, min, max, checkValue, searchValue));\r\n      });\r\n    },\r\n    700\r\n  );\r\n  // 4.2 (Начало в filters.js) Добавим к знакомому debounceFunc() в атрибуты ещё searchInput.value, как и в другие функции тоже.\r\n  searchInput.addEventListener('input', () =>\r\n    debounceFunc(\r\n      minInput.value,\r\n      maxInput.value,\r\n      checkbox.value,\r\n      searchInput.value\r\n    )\r\n  );\r\n\r\n  // 2.2 Повесим на каждый из них обработчики события.\r\n  // 3.4.2 Также и сюда\r\n  minInput.addEventListener('input', () =>\r\n    debounceFunc(\r\n      minInput.value,\r\n      maxInput.value,\r\n      checkbox.value,\r\n      searchInput.value\r\n    )\r\n  );\r\n  maxInput.addEventListener('input', () =>\r\n    debounceFunc(\r\n      minInput.value,\r\n      maxInput.value,\r\n      checkbox.value,\r\n      searchInput.value\r\n    )\r\n  );\r\n  // 3.2 На чекбокс повесим обработчик события, который по клику будет вешать класс, который отобразит галочку в чекбоксе.\r\n  checkbox.addEventListener('input', () => {\r\n    if (checkbox.checked) {\r\n      checkMark.classList.add('checked');\r\n    } else {\r\n      checkMark.classList.remove('checked');\r\n    }\r\n    // 3.4.3 И сюда\r\n    // 3.5.1 Также и добавим checkValue в filters.js\r\n    debounceFunc(\r\n      minInput.value,\r\n      maxInput.value,\r\n      checkbox.checked,\r\n      searchInput.value\r\n    );\r\n  });\r\n};\r\n\r\nexport default search;\r\n","// === Специальная функция-помощник «Debounce», которая позволяет создавать отложенные запросы на сервер, предотвращая возможные перегрузки сервера запросами, если их будет слишком много. ===\r\n// 1.1 Она будет принимать два параметра «func», некая функция, которую мы будем отложено делать и «ms» - миллисекунды, т.е. количество времени сколько у нас будет копиться введённая информация для отправки на сервер. Т.е. если в промежутке между вводом одного символа до другого не прошло указанное количество миллисекунд, то запрос на сервер откладывается, пока промежуток между вводом не станет достаточно долгим. И поставим значение по умолчанию 500.\r\nexport const debounce = (func, ms = 500) => {\r\n  // 1.2 Делаем time, т.е. некую переменную, в которой у нас будет производится отсчёт времени.\r\n  let timer;\r\n  // 1.3 Далее наша функция при вызове будет возвращать другую функцию. Т.е. вызываем мы функцию debounce, но возвращаем некую callback-функцию, который возьмёт все параметры функции.\r\n  return (...args) => {\r\n    // 1.4 Почистит таймер, который мы используем по идентификатору timer\r\n    clearTimeout(timer);\r\n    // 1.5 Создаёт новый таймер, который вызывает функцию setTimeout() с callback-функцией func-apply(), куда передаём контекст вызова this и все параметры.\r\n    // 1.6 А через запятую укажем время таймаута из нашего определённого значения «ms».\r\n    timer = setTimeout(() => {func.apply(this, args)}, ms);\r\n  };\r\n};\r\n\r\n// 1.7 Итак, что же там выше происходит? Когда мы вызываем функцию поиска - она попадает в функцию debounce(), запускается некий таймер на 500 миллисекунд. И если в течении этих 500 мс мы ещё раз введём какой-то символ, то у нас снова запустится debounce(), почистит предыдущий таймер и запустит новый. Таким образом, если мы достаточно быстро печатаем, то у нас не будет происходить вызов функции при каждом вводе символа, как это было прежде.\r\n// 1.8 Теперь пришло время перейти в search.js и воспользоваться той функцией-хелпером.","import getData from './get-data.js';\r\nimport renderGoods from './render-goods.js';\r\nimport { categoryFilter } from './filters.js';\r\n// 1.0 Реализуем по клику на кнопке \"Каталог\" и выборе нужной пользователю категории, фильтрацию всего товара по категориям этого товара.\r\nconst catalogue = () => {\r\n  // 1.1 Сперва получим саму кнопку кнопки \"Каталог\".\r\n  const catalogueButton = document.querySelector('.catalog-button > button');\r\n  const catalogueModal = document.querySelector('.catalog');\r\n  // 1.3.1 Также нам необходимо получить наш список категорий. Это li’шки с каким-то текстом внутри себя.\r\n  const catalogueCategories = document.querySelectorAll('.catalog li');\r\n  // 1.2.1 Повесим обработчик события на эту кнопку. И по клику на неё нам необходимо показывать маленькое модальное окно.\r\n  // 1.2.2 Также нам необходимо закрывать данное модальное окно.\r\n  // ? Обычно здесь делают какой-то класс и добавляют его при помощи toggle(), но данный класс не предусмотрен вёрсткой, и т.к. мы работаем на этом интенсиве с JS, то используем здесь несколько костыльный способ, который однако может пригодится где-нибудь ещё.\r\n  // 1.2.3 Создадим техническую изменяемую переменную isOpen...\r\n  let isOpen = false;\r\n\r\n  catalogueButton.addEventListener('click', () => {\r\n    // 1.2.4 ...и по каждому клику мы будем менять значение этой переменной на противоположное.\r\n    isOpen = !isOpen;\r\n    // 1.2.5 Далее мы будем проверять, если isOpen равен true, тогда мы будем давать модальному окну свойство display: block;, в противном случае убирать его.\r\n    if (isOpen) {\r\n      catalogueModal.style.display = 'block';\r\n    } else {\r\n      catalogueModal.style.display = '';\r\n    }\r\n  });\r\n  // 1.3.2 Теперь переберём все эти элементы и повесим обработчики события. И по клику на каждую из li’шек категорий нам необходимо получить их текстовое содержимое.\r\n  // 1.4 Теперь задача параллельно запускать фильтрацию данных и их получение. Для этого возьмём из search.js функцию getData() и вызовем её по клику. (не забываем импортировать getData() & renderGoods())\r\n  // 1.5 Также нам требуется создать новую функцию в filters.js [categoryFilter()]\r\n  catalogueCategories.forEach(category => {\r\n    category.addEventListener('click', () => {\r\n      const content = category.textContent;\r\n\r\n      getData().then((data) => {\r\n        renderGoods(categoryFilter(data, content));\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nexport default catalogue;\r\n","import getData from './get-data.js';\r\nimport renderGoods from './render-goods.js';\r\nimport { priceFilter, hotSaleFilter } from './filters.js';\r\n\r\nconst filter = () => {\r\n  const minInput = document.querySelector('#min');\r\n  const maxInput = document.querySelector('#max');\r\n  const checkboxInput = document.querySelector('#discount-checkbox');\r\n  const checkboxMark = document.querySelector('.filter-check_checkmark');\r\n\r\n  minInput.addEventListener('input', () => {\r\n    getData().then((data) => {\r\n      renderGoods(priceFilter(hotSaleFilter(data, checkboxInput.checked), minInput.value, maxInput.value));\r\n    });\r\n  });\r\n\r\n  maxInput.addEventListener('input', () => {\r\n    getData().then((data) => {\r\n      renderGoods(priceFilter(hotSaleFilter(data, checkboxInput.checked), minInput.value, maxInput.value));\r\n    });\r\n  });\r\n\r\n  checkboxInput.addEventListener('change', () => {\r\n    if (checkboxInput.checked) {\r\n      checkboxMark.classList.add('checked');\r\n    } else {\r\n      checkboxMark.classList.remove('checked');\r\n    }\r\n\r\n    getData().then((data) => {\r\n      renderGoods(priceFilter(hotSaleFilter(data, checkboxInput.checked), minInput.value, maxInput.value));\r\n    });\r\n  });\r\n};\r\n\r\nexport default filter;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0,\n\t532: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunko_zone\"] = self[\"webpackChunko_zone\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [532], () => (__webpack_require__(22)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","goods","cartWrapper","document","querySelector","innerHTML","length","insertAdjacentHTML","forEach","goodsItem","id","sale","img","price","title","fadeIn","self","wrapper","classList","add","setTimeout","fadeOut","remove","speed","slideIn","slideOut","Notify","args","_this","this","notifyOut","callback","status","_a","type","text","_b","showIcon","_c","customIcon","_d","customClass","_e","_f","effect","_g","showCloseButton","_h","autoclose","_j","autotimeout","_k","gap","_l","distance","_m","position","_o","customWrapper","checkRequirements","setContainer","setWrapper","setPosition","setIcon","setCloseButton","setContent","container","prepend","setEffect","notifyIn","selectedNotifyInEffect","autoClose","setObserver","console","error","prototype","createElement","body","appendChild","style","setProperty","prefix","includes","closeWrapper","addEventListener","close","strHTML","DOMParser","parseFromString","childNodes","transitionDuration","titleElement","textElement","contentWrapper","textContent","paddingRight","trim","marginTop","iconWrapper","computedIcon","observer","IntersectionObserver","entries","intersectionRatio","threshold","observe","selectedNotifyOutEffect","string","fetch","then","response","ok","json","Error","catch","message","goodsWrapper","localStorage","setItem","JSON","stringify","priceFilter","min","max","filter","hotSaleFilter","value","cartButton","cartModal","cartCloseButton","cartTotalSum","cartSendButton","cart","getItem","parse","display","reduce","sum","goodItem","evt","target","contains","closest","dataset","find","item","push","index","findIndex","splice","method","headers","removeItem","data","searchInput","minInput","maxInput","checkbox","checkMark","debounceFunc","func","ms","timer","clearTimeout","apply","debounce","checkValue","searchValue","minValue","maxValue","isMin","parseInt","isMax","isSale","toLowerCase","funcFilter","checked","catalogueButton","catalogueModal","catalogueCategories","querySelectorAll","isOpen","category","content","checkboxInput","checkboxMark","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","r","o","obj","prop","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}